<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="com.lazycoder.database.dao.command.InitOperatingModelMapper">

    <!-- 表名 -->
    <sql id="table">initControl</sql>

    <resultMap id="result"
               type="com.lazycoder.database.model.command.InitOperatingModel">
    </resultMap>

    <!-- 添加模块 -->
    <insert id="addOperatingModel" parameterType="java.util.List">
        insert into
        <include refid="table"/>
        (
        moduleId,
        whetherTheDefault,
        showText,
        ordinal,
        defaultControlStatementFormat, hiddenControlStatementFormat,
        hiddenState,
        numberOfComponents,
        noteListParam,
        controlComponentCorrespondingInformation)
        values
        <foreach collection="list" item="initOperatingModel"
                 index="index" separator=",">
            (
            #{initOperatingModel.moduleId},
            #{initOperatingModel.whetherTheDefault},
            #{initOperatingModel.showText},
            #{initOperatingModel.ordinal},
            #{initOperatingModel.defaultControlStatementFormat},
            #{initOperatingModel.hiddenControlStatementFormat},
            #{initOperatingModel.hiddenState},
            #{initOperatingModel.numberOfComponents},
            #{initOperatingModel.noteListParam},
            #{initOperatingModel.controlComponentCorrespondingInformation}
            )
        </foreach>
    </insert>

    <!-- 更改模块
    <update id="updateOperatingModel"
        parameterType="com.lazycoder.database.model.command.InitOperatingModel">
        update
        <include refid="table" />
        set
        "defaultControlStatementFormat"= #{defaultControlStatementFormat},
        "hiddenControlStatementFormat"=
        #{hiddenControlStatementFormat},
        "hiddenState"= #{hiddenState},
        "numberOfComponents"= #{numberOfComponents},
        "whetherTheDefault"=
        #{whetherTheDefault},
        "showText"= #{showText},
        "controlComponentCorrespondingInformation"=
        #{controlComponentCorrespondingInformation}
        where
        ( "ordinal" = #{ordinal} and
        className=#{className} and
        moduleName=#{moduleName})
    </update>-->


    <!-- 查询某模块所有操作模型 -->
    <select id="getOperatingModelList"
            parameterType="java.lang.String"
            resultType="com.lazycoder.database.model.command.InitOperatingModel">
        select * from
        <include refid="table"/>
        where
        moduleId = #{moduleId}
        order by ordinal
    </select>


    <!-- <select id="getInitSelectionList" parameterType="java.lang.String"
        resultType="com.lannong.Client.db.model.ForModule.InitSelectionOption"> select
        ordinal, showText from <include refid="table"/> where className = #{className}
        and moduleName = #{moduleName} order by ordinal </select> -->

    <select id="getFeatureList" parameterType="java.lang.String"
            resultType="com.lazycoder.database.model.featureSelectionModel.InitFeatureSelectonModel">
        select * from
        <include refid="table"/>
        where
        moduleId = #{moduleId}
        order by ordinal
    </select>


    <!-- 查询某模块所有操作模型 -->
    <select id="getOperatingModel"
            parameterType="com.lazycoder.database.model.featureSelectionModel.InitFeatureSelectonModel"
            resultType="com.lazycoder.database.model.command.InitOperatingModel">
        select * from
        <include refid="table"/>
        where
        moduleId = #{moduleId}
        and ordinal = #{ordinal}
    </select>


    <select id="getDeafaultOperatingModel"
            resultType="com.lazycoder.database.model.command.InitOperatingModel">
        select * from
        <include refid="table"/>
        where
        moduleId = #{moduleId}
        and whetherTheDefault = #{whetherTheDefault}
    </select>


    <!-- 删除模块 -->
    <delete id="delOperatingModel">
        delete from
        <include refid="table"/>
        where
        moduleId = #{moduleId}
    </delete>


</mapper>